associate lifecycle::



'Associate Lifecycle To ICC
Call StartExecution(InputFilePath,"AssociateLifecycleToICC",2)
Call ClickLinkWebIfCollapsed("Oracle Applications Home Page", AssociateLifecycleToICC_ResponsibilityName, 0)
Call ClickLinkWebIfCollapsed("Oracle Applications Home Page", "Setup", 0)
Call ClickLinkWeb("Oracle Applications Home Page", "Setup Workbench", 0)
Set browserObj= Browser("name:=Item Catalog Categories")
Call WaitForObject(browserObj, 700)
Set browserObj=Nothing
wait 5
AssociateLifecycleToICC_itemIterator = 1
Do
	Call SelectListWeb("Item Catalog Categories", "EgoListSearchContextValue", 0, "Item Catalog Category")
	wait 5
	Call UpdateTextWeb("Item Catalog Categories", "EgoItemTypeListSearchValue", 0, AssociateLifecycleToICC_SearchICC)
	Call ClickButtonWeb("Item Catalog Categories", "Go", 0)
	wait 5
	Call ClickLinkWeb("Item Catalog Categories", AssociateLifecycleToICC_SearchICC, 0)
	Set browserObj= Browser("name:=Basic Information")
	Call WaitForObject(browserObj, 700)
	Set browserObj=Nothing
	wait 5
	'Go to lifecycle page
	Call ClickLinkWeb("Basic Information", "Lifecycles", 0)
	Set browserObj= Browser("name:=Lifecycles")
	Call WaitForObject(browserObj, 700)
	Set browserObj=Nothing
	wait 5
	'Select Lifecycle Associations
	If  Browser("name:=Lifecycles").Page("title:=Lifecycles").WebElement("title:=Name","html tag:=SPAN","innertext:="& AssociateLifecycleToICC_LifecycleAssociations,"index:=0").Exist(5) Then
		wait 2
	Else
		Call ClickButtonWeb("Lifecycles", "Add", 0)
		Set browserObj= Browser("name:=Add Lifecycle")
		Call WaitForObject(browserObj, 700)
		Set browserObj=Nothing
		wait 5
		rownumber= GetWebelementIndexFromWebTable("Add Lifecycle", "SPAN", "N6:EgoLifecyclesResultsDisplayName.*", AssociateLifecycleToICC_LifecycleAssociations)
		wait 5
		Call SelectCheckBoxWebWithIndex("Add Lifecycle", "N6:selected.*", "rownumber", "True")
		Call ClickButtonWeb("Add Lifecycle", "Apply", 0)
		Set browserObj= Browser("name:=Lifecycles")
		Call WaitForObject(browserObj, 700)
		Set browserObj=Nothing
		wait 5	
	End If

	'Change policy
	Call SelectListWeb("Lifecycles", "ViewPolicyPoplist", 0, AssociateLifecycleToICC_ChangePolicyView)
	Call SelectListWeb("Lifecycles", "UpdateLCPhasePoplist", 0, AssociateLifecycleToICC_ChangePolicyPendingPhase)
	Call ClickButtonWeb("Lifecycles", "Go", 1)
	wait 5
	If Ucase(AssociateLifecycleToICC_Operation) = "ADD" Then
		Do
			Call ClickLinkWeb("Lifecycles","Pending Phase",0)
			Call ClickButtonWeb("Lifecycles", "Add Another Row", 0)
			wait 5
			AssociateLifecycleToICC_rowIDToFill =  GetEmptyRowNumber("Lifecycles","N53:2.*")
			Call UpdateTextWeb("Lifecycles","N53:2:"&AssociateLifecycleToICC_rowIDToFill, 0, AssociateLifecycleToICC_AttributeGroup)
			wait 5
			Call SelectListWeb("Lifecycles", "N53:PolicyCode:"&AssociateLifecycleToICC_rowIDToFill, 0, AssociateLifecycleToICC_ChangePolicy)
			wait 5
			Call ClickLinkWeb("Lifecycles","Active Phase",0)
			wait 5
			Call SelectListWeb("Lifecycles", "N55:PolicyCode:"&AssociateLifecycleToICC_rowIDToFill, 0, AssociateLifecycleToICC_ChangePolicyActive)	
			wait 5
			AssociateLifecycleToICC_itemIterator = AssociateLifecycleToICC_itemIterator +1
			Call GetInputFromExcel(InputFilePath, "AssociateLifecycleToICC", AssociateLifecycleToICC_itemIterator+1)
			If AssociateLifecycleToICC_ChangePolicyUpdate <> "" Then
				wait 1
			Else 
				Exit do
			End If
		Loop until AssociateLifecycleToICC_SearchICC <> ""	
		Call ClickButtonWeb("Lifecycles", "Apply", 0)
		wait 5
		
	ElseIf Ucase(AssociateLifecycleToICC_Operation) = "CHANGE" Then
		Call ClickLinkWeb("Lifecycles","Pending Phase",0)
		wait 5
		For i = 0 To 5 Step 1
			Set textBoxObject = Browser("name:=Lifecycles").Page("title:=Lifecycles").WebEdit("name:=N53:2:"& i,"index:=0")
			If textBoxObject.Exist(5) Then
				capturedValue= textBoxObject.GetROProperty("value")
				If capturedValue = AssociateLifecycleToICC_AttributeGroup Then
					Call SelectListWeb("Lifecycles", "N53:PolicyCode:"&i, 0, AssociateLifecycleToICC_ChangePolicy)
					wait 5
					Set textBoxObject = nothing
					Exit for
				End If
			End If
			Set textBoxObject = nothing
		Next
		Call ClickLinkWeb("Lifecycles","Active Phase",0)
		wait 5
		For i = 0 To 5 Step 1
			Set textBoxObject = Browser("name:=Lifecycles").Page("title:=Lifecycles").WebEdit("name:=N55:3:"& i,"index:=0")
			If textBoxObject.Exist(5) Then
				capturedValue= textBoxObject.GetROProperty("value")
				If capturedValue = AssociateLifecycleToICC_AttributeGroupActive Then
					Call SelectListWeb("Lifecycles", "N55:PolicyCode:"&i, 0, AssociateLifecycleToICC_ChangePolicyActive)
					wait 5
					Set textBoxObject = nothing
					Exit for
				End If
			End If
			Set textBoxObject = nothing
		Next
		Call ClickButtonWeb("Lifecycles", "Apply", 0)
		wait 5
		AssociateLifecycleToICC_itemIterator = AssociateLifecycleToICC_itemIterator +1
		Call GetInputFromExcel(InputFilePath, "AssociateLifecycleToICC", AssociateLifecycleToICC_itemIterator+1)
		
	ElseIf Ucase(AssociateLifecycleToICC_Operation) = "DELETE" Then
		Call ClickLinkWeb("Lifecycles","Pending Phase",0)
		wait 5
		For i = 0 To 5 Step 1
			Set textBoxObject = Browser("name:=Lifecycles").Page("title:=Lifecycles").WebEdit("name:=N53:2:"& i,"index:=0")
			If textBoxObject.Exist(5) Then
				capturedValue= textBoxObject.GetROProperty("value")
				If capturedValue = AssociateLifecycleToICC_AttributeGroup Then
					Call SelectCheckBoxWebWithIndex("Lifecycles","N53:selected:"& i,0,"True")
					wait 5
					Call ClickButtonWeb("Lifecycles","Remove",0)
					wait 5
					Set textBoxObject = nothing
					Exit for
				End If
			End If
			Set textBoxObject = nothing
		Next
		Call ClickButtonWeb("Lifecycles", "Apply", 0)
		wait 5
		AssociateLifecycleToICC_itemIterator = AssociateLifecycleToICC_itemIterator +1
		Call GetInputFromExcel(InputFilePath, "AssociateLifecycleToICC", AssociateLifecycleToICC_itemIterator+1)
	End if 
	Call ClickLinkWeb("Lifecycles", "Item Catalog Categories", 0)
	wait 5
Loop while AssociateLifecycleToICC_Phase <> ""

Call ClickLinkWeb("Item Catalog Categories", "Home", 0)
wait 5
Call ClickLinkWeb("Oracle Applications Home Page", "Logout", 0)
Call CloseBrowser("Login.*")
Call FinalStatus()
----------------------------------------------------------


associate phase:;




'Associate Phases To Item Status
Call StartExecution(InputFilePath,"AssociatePhasesToItemStatus",2)
Call ClickLinkWebIfCollapsed("Oracle Applications Home Page", AssociatePhasesToItemStatus_ResponsibilityName, 0)
Call ClickLinkWebIfCollapsed("Oracle Applications Home Page", "Setup", 0)
Call ClickLinkWeb("Oracle Applications Home Page", "Setup Workbench", 0)
Set browserObj= Browser("name:=Item Catalog Categories")
Call WaitForObject(browserObj, 700)
Set browserObj=Nothing
wait 5
Call ClickLinkWeb("Item Catalog Categories", "Lifecycle Phases", 0)
Set browserObj= Browser("name:=Lifecycle Phases")
Call WaitForObject(browserObj, 700)
Set browserObj=Nothing
wait 5
AssociatePhasesToItemStatus_itemIterator=1
Do
	Call SelectListWeb("Lifecycle Phases", "EgoLifecyclesPhaseSearchContext", 0, "Phase")
	Call UpdateTextWeb("Lifecycle Phases", "EgoLifecyclesPhaseSearchValue", 0, AssociatePhasesToItemStatus_LifecyclePhases)
	Call ClickButtonWeb("Lifecycle Phases", "Go", 0)
	wait 5
	Call ClickLinkWeb("Lifecycle Phases", AssociatePhasesToItemStatus_LifecyclePhases, 0)
	Set browserObj= Browser("name:=Phase Details")
	Call WaitForObject(browserObj, 700)
	Set browserObj=Nothing
	wait 5
	Call ClickButtonWeb("Phase Details", "Update", 0)
	Set browserObj= Browser("name:=Edit Phase Details")
	Call WaitForObject(browserObj, 700)
	Set browserObj=Nothing
	wait 5
	If Ucase(AssociatePhasesToItemStatus_Operation) = "ADD" Then
		Call ClickButtonWeb("Edit Phase Details", "Add Another Row", 0)
		wait 5
		'Get the first empty Row where data is to be filled
	 	AssociatePhasesToItemStatus_rowIDToFill =  GetEmptyRowNumber("Edit Phase Details", "(.*)?EgoPhaseItemStatus.*")
	 	Call UpdateTextWeb("Edit Phase Details", "(.*)?EgoPhaseItemStatus:"&AssociatePhasesToItemStatus_rowIDToFill, 0, AssociatePhasesToItemStatus_ItemStatus)
	 	wait 5
	 	If Ucase(AssociatePhasesToItemStatus_Default) = "CHECKED" Then
	 		Call ClickImageWeb("Edit Phase Details", "Default", AssociatePhasesToItemStatus_rowIDToFill)
	 		wait 5
	 	End If	
	 ElseIf Ucase(AssociatePhasesToItemStatus_Operation) = "UPDATE" Then
	 	For i = 0 To 2 Step 1
	 		Set textBoxObject=Browser("name:=Edit Phase Details").Page("title:=Edit Phase Details").WebEdit("name:=(.*)?EgoPhaseItemStatus.*","index:="& i)
	 		If textBoxObject.Exist(5) Then
		 		itemStatus= textBoxObject.GetROProperty("value")
		 		If itemStatus = AssociatePhasesToItemStatus_ItemStatus Then
		 			wait 5
			 		If Ucase(AssociatePhasesToItemStatus_Default) = "CHECKED" Then
				 		Call ClickImageWeb("Edit Phase Details", "Default", i)
				 		wait 5
				 	End If	
				 Exit for
		 		End If
	 		End If
	 	Next
	 	Set textBoxObject = nothing
	 ElseIf Ucase(AssociatePhasesToItemStatus_Operation) = "DELETE" Then
	 	For i = 0 To 2 Step 1
	 		Set textBoxObject=Browser("name:=Edit Phase Details").Page("title:=Edit Phase Details").WebEdit("name:=(.*)?EgoPhaseItemStatus.*","index:="& i)
	 		If textBoxObject.Exist(5) Then
		 		itemStatus= textBoxObject.GetROProperty("value")
		 		If itemStatus = AssociatePhasesToItemStatus_ItemStatus Then
		 			wait 5
			 		Call SelectCheckBoxWebWithIndex("Edit Phase Details","(.*)?selected.*",i,"True")
			 		Call ClickButtonWeb("Edit Phase Details","Delete",0)
					 Exit for
		 		End If
	 		End If
	 	Next
	 	Set textBoxObject = nothing
	End If
	
	Call ClickButtonWeb("Edit Phase Details", "Apply", 0)
	Set browserObj= Browser("name:=Phase Details")
	Call WaitForObject(browserObj, 700)
	Set browserObj=Nothing
	wait 5
	Call ClickLinkWeb("Phase Details","Lifecycle Phases",0)
	wait 5
	AssociatePhasesToItemStatus_itemIterator = AssociatePhasesToItemStatus_itemIterator+1
	Call GetInputFromExcel(InputFilePath, "AssociatePhasesToItemStatus", AssociatePhasesToItemStatus_itemIterator+1)
Loop while AssociatePhasesToItemStatus_Phase <> ""
Call ClickLinkWeb("Lifecycle Phases", "Home", 0)
wait 5
Call FinalStatus()

-------------------------------------

lifecycle::



'Life Cycle
Call StartExecution(InputFilePath,"Lifecycle",2)
Call ClickLinkWebIfCollapsed("Oracle Applications Home Page", Lifecycle_ResponsibilityName, 0)
Call ClickLinkWebIfCollapsed("Oracle Applications Home Page", "Projects: Setup", 0)
Call ClickLinkWeb("Oracle Applications Home Page", "Lifecycles", 0)
Set browserObj= Browser("name:=Lifecycles")
Call WaitForObject(browserObj, 700)
Set browserObj=Nothing
wait 5
Lifecycle_itemIterator1 = 1
Do

	'Click button create lifecycle
	Call ClickButtonWeb("Lifecycles", "Create Lifecycle", 0)
	Set browserObj= Browser("name:=Lifecycle Details")
	Call WaitForObject(browserObj, 700)
	Set browserObj=Nothing
	wait 5
	'Fill Lifecycle Details
	Call EnterTextWeb("Lifecycle Details", "LifecycleName", 0, Lifecycle_Name)
	Call EnterTextWeb("Lifecycle Details", "LifecycleShortName", 0, Lifecycle_ShortName)
	Call EnterTextWeb("Lifecycle Details", "LifecycleDescription", 0, Lifecycle_Description)
	wait 3
	If UCase(Lifecycle_EnableForProjects)="CHECKED" Then
		Call SelectCheckBoxWeb("Lifecycle Details", "EnableForProjects", "True")
	ElseIf UCase(Lifecycle_EnableForProjects)="UNCHECKED" Then	
		Call SelectCheckBoxWeb("Lifecycle Details", "EnableForProjects", "False")
	End If
	wait 3
	If UCase(Lifecycle_EnableForItems)="CHECKED" Then
		Call SelectCheckBoxWeb("Lifecycle Details", "EnableForProducts", "True")
	ElseIf UCase(Lifecycle_EnableForProjects)="UNCHECKED" Then	
		Call SelectCheckBoxWeb("Lifecycle Details", "EnableForProducts", "False")
	End If
	wait 3
	'Fill Lifecycle Phases
	Lifecycle_itemIterator2=0
	Do
		Call UpdateTextWeb("Lifecycle Details", "N31:PhaseSequence.*",Lifecycle_itemIterator2, Lifecycle_PhaseSequenceNumber)
		wait 3
		Call UpdateTextWeb("Lifecycle Details", "N31:StatusName.*", Lifecycle_itemIterator2 , Lifecycle_LifecyclePhase)
		wait 5
		Lifecycle_itemIterator2 = Lifecycle_itemIterator2+1
		Lifecycle_itemIterator1 = Lifecycle_itemIterator1+1
		Call GetInputFromExcel(InputFilepath, "Lifecycle", Lifecycle_itemIterator1+1)
		If Lifecycle_PhaseSequenceNumber <> "" Then
			wait 1
		Else 
			Exit do
		End If
	Loop until Lifecycle_Name <> ""
	
	Call ClickButtonWeb("Lifecycle Details", "Apply", 0)
	Set browserObj= Browser("name:=Lifecycles")
	Call WaitForObject(browserObj, 700)
	Set browserObj=Nothing
	wait 5
Loop while Lifecycle_Phase <> ""

Call ClickLinkWeb("Lifecycles", "Home", 0)
Call FinalStatus()

------------------------------

system status::


' System Status
Call StartExecution(InputFilePath,"SystemStatus",2)
Call LoginOracleApplicationWeb(ApplicationURL,UserName,Password)
Call ClickLinkWebIfCollapsed("Oracle Applications Home Page", SystemStatus_ResponsibilityName, 0)
Call ClickLinkWebIfCollapsed("Oracle Applications Home Page", "Setup", 0)
Call ClickLinkWebIfCollapsed("Oracle Applications Home Page", "System", 0)
Call ClickLinkWeb("Oracle Applications Home Page", "Statuses", 0)
wait 10
If JavaWindow("tagname:=PluginEmbeddedFrame").JavaDialog("label:=Security Warning").Exist(15) Then
    JavaWindow("tagname:=PluginEmbeddedFrame").JavaDialog("label:=Security Warning").JavaCheckBox("label:=I accept the risk and.*").Set "ON"
    wait 5
    JavaWindow("tagname:=PluginEmbeddedFrame").JavaDialog("label:=Security Warning").JavaButton("label:=Run","index:=0").Click
End If
Call waitUntilFormExist("Statuses")
SystemStatus_itemIterator = 1

Do
	If UCase(SystemStatus_Operation)="ADD" Then
		Call SetFocusTabbedRegionTable("Statuses","General","PROJECT_STATUSES",SystemStatus_itemIterator, "Status Type")
		Call EnterTextTabbedRegionTable("Statuses", "General",0,"PROJECT_STATUSES",  SystemStatus_itemIterator, "Status Type", SystemStatus_StatusType)
		Call EnterTextTabbedRegionTable("Statuses", "General", 0, "PROJECT_STATUSES", SystemStatus_itemIterator, "Status", SystemStatus_Status)
		Call EnterTextTabbedRegionTable("Statuses", "General", 0, "PROJECT_STATUSES", SystemStatus_itemIterator, "System Status", SystemStatus_SystemStatus)
		Call EnterTextTabbedRegionTable("Statuses", "General", 0, "PROJECT_STATUSES", SystemStatus_itemIterator, "Description", SystemStatus_Description)
		Call EnterTextTabbedRegionTable("Statuses", "General", 0, "PROJECT_STATUSES", SystemStatus_itemIterator, "From", SystemStatus_FromDate)
		Call EnterTextTabbedRegionTable("Statuses", "General", 0, "PROJECT_STATUSES", SystemStatus_itemIterator, "To", SystemStatus_ToDate)
		If Ucase(SystemStatus_StartingStatus)="CHECKED" Then
			Call EnterTextTabbedRegionTable("Statuses", "General", 0, "PROJECT_STATUSES", SystemStatus_itemIterator, "Starting Status", "True")
		ElseIf Ucase(SystemStatus_StartingStatus)="UNCHECKED" Then
			Call EnterTextTabbedRegionTable("Statuses", "General", 0, "PROJECT_STATUSES", SystemStatus_itemIterator, "Starting Status", "False")
		End If		
		Call SelectMenu("Statuses", "File->Save")
	End If
	SystemStatus_itemIterator = SystemStatus_itemIterator + 1
	Call GetInputFromExcel(InputFilePath, "SystemStatus", SystemStatus_itemIterator+1)
		
Loop while SystemStatus_Phase <> ""

Call CloseForm("Statuses")
Call SelectMenu("Navigator", "File->Exit Oracle Applications")
Call ClickNotificationButton("Caution", "OK")
Call CloseBrowser ("Oracle Applications R12.*")
Call FinalStatus()











